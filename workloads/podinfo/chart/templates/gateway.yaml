{{ if not .Values.gateway.enabled }}
{{- return -}}
{{- end }}

apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: {{ include "fullName" . }}-cert
spec:
  secretName: {{ .Values.gateway.certificate.secretName }} # The name of the Secret that will store the certificate
  commonName: {{ .Values.gateway.certificate.commonName }}
  subject:
    organizations:
    {{- with .Values.gateway.subject.organizations }}
    {{- toYaml . | nindent 6 }}
    {{- end }}
    organizationalUnits:
    {{- with .Values.gateway.subject.organizationalUnits }}
    {{- toYaml . | nindent 6 }}
    {{- end }}
  duration: {{ .Values.gateway.certificate.duration }}
  renewBefore: {{ .Values.gateway.certificate.renewBefore }}
  dnsNames:
    {{- with .Values.gateway.certificate.dnsNames }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
  issuerRef:
    name: {{ .Values.gateway.certificate.issuerRef.name }}
    kind: {{ .Values.gateway.certificate.issuerRef.kind }}
    group: {{ .Values.gateway.certificate.issuerRef.group }}
  usages:
    {{- with .Values.gateway.certificate.usages }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
  privateKey:
    algorithm: {{ .Values.gateway.certificate.privateKey.algorithm }}
    size: {{ .Values.gateway.certificate.privateKey.size }}
---
apiVersion: gateway.networking.k8s.io/v1
kind: GatewayClass
metadata:
  name: traefik # A unique name for this GatewayClass
spec:
  controllerName: "traefik.io/gateway-controller" # Replace with the actual controller name
  # description: "A simple GatewayClass for HTTP traffic" # Optional description
  # parametersRef: # Optional: Reference to a parameters resource
  #   group: example.com
  #   kind: GatewayClassConfig
  #   name: traefik-parameters
  #   namespace: default # Required if parametersRef is namespaced
--- 
apiVersion: gateway.networking.k8s.io/v1
kind: Gateway
metadata:
  # This gateway will be dedicated to this solution
  name: {{ include "fullName" . }}
spec:
  gatewayClassName: {{ .Values.gateway.gateway.gatewayClassName }} # Replace with the name of your GatewayClass
  listeners:
    {{- with .Values.gateway.gateway.listeners }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
---
apiVersion: gateway.networking.k8s.io/v1
kind: HTTPRoute
metadata:
  name: podinfo-https-route
  namespace: hello
spec:
  parentRefs:
    - name: my-gateway
      sectionName: https
      kind: Gateway

  hostnames:
    - podinfo.services.argocdpoc.perihelion.lan

  rules:
    - matches:
        - path:
            type: PathPrefix
            value: /

      backendRefs:
        - name: podinfo
          namespace: hello
          port: 80
---
apiVersion: gateway.networking.k8s.io/v1
kind: HTTPRoute
metadata:
  name: podinfo-http-route
  namespace: hello # Or the namespace where you want your gateway to run
spec:
  parentRefs:
    # This should reference your deployed Gateway resource.
    # Replace 'my-gateway' with the actual name of your Gateway.
    # You might also need to specify the namespace of the Gateway
    # if it's not in the same namespace as the HTTPRoute.
    - name: my-gateway
      sectionName: http
      kind: Gateway
      namespace: hello
  hostnames:
    - podinfo.services.argocdpoc.perihelion.lan
  rules:
    - filters:
        - type: RequestRedirect
          requestRedirect:
            scheme: https
